{
  "version": "2.0.0",
  "tasks": [
    {
      "label": "build",
      "type": "shell",
      "dependsOn": ["build-cmake"],
      "windows": {
        "command": "robocopy ${workspaceFolder}/build/bin ${workspaceFolder}/build/bin-copy /R:0 /E /S /NJS /NJH /NFL /NDL; exit 0"
      },
      "group": {
        "kind": "build",
        "isDefault": true
      },
    },
    {
      "label": "build-cmake",
      "type": "cmake",
      "command": "build",
      "targets": ["all"],
      "preset": "${command:cmake.activeBuildPresetName}",
      "group": "build",
      "problemMatcher": {
        "base": "$gcc",
        "fileLocation": ["absolute"]
      },
    },
    {
      "label": "build-kill-core",
      "dependsOn": ["build", "kill-core"],
      "dependsOrder": "sequence"
    },
    {
      "label": "build-kill-gui",
      "dependsOn": ["build", "kill-gui"],
      "dependsOrder": "sequence"
    },
    {
      "label": "build-silent",
      "type": "shell",
      "dependsOn": ["build"],
      "group": "build",
      "presentation": {
        "reveal": "silent",
      }
    },
    {
      "label": "clean",
      "type": "cmake",
      "command": "build",
      "targets": ["clean"],
      "preset": "${command:cmake.activeBuildPresetName}",
      "group": "build"
    },
    {
      "label": "clean-gcda",
      "type": "shell",
      "command": "find . -name '*.gcda' -delete",
      "windows": {
        "command": "$null"
      },
      "presentation": {
        "reveal": "silent"
      }
    },
    {
      "label": "clean-qt",
      "type": "shell",
      "command": "rm -r build/src/gui build/src/lib/gui",
      "windows": {
        "command": "remove-item -recurse build/src/gui,build/src/lib/gui"
      }
    },
    {
      "label": "clean-config",
      "type": "shell",
      "linux": {
        "command": "rm -r ~/.config/Deskflow/Deskflow.conf"
      },
      "windows": {
        "command": "remove-item -recurse $env:APPDATA\\Deskflow\\Deskflow"
      },
      "osx": {
        "command": "rm -r ~/Library/Application\\ Support/Deskflow/Deskflow"
      }
    },
    {
      "label": "tests",
      "dependsOn": ["integtests", "unittests"],
      "problemMatcher": []
    },
    {
      "label": "kill-all",
      "type": "shell",
      "dependsOn": ["kill-core", "kill-gui"],
      "presentation": {
        "reveal": "silent"
      }
    },
    {
      "label": "kill-core",
      "type": "shell",
      "command": "killall deskflow-core || true",
      "windows": {
        "command": "taskkill /F /IM deskflow-core.exe; $true"
      },
      "dependsOn": ["daemon-stop"],
      "presentation": {
        "reveal": "silent"
      }
    },
    {
      "label": "kill-gui",
      "type": "shell",
      "command": "killall deskflow || true",
      "windows": {
        "command": "taskkill /F /IM deskflow.exe; $true"
      },
      "presentation": {
        "reveal": "silent"
      }
    },
    {
      "label": "gui",
      "type": "process",
      "command": "${workspaceFolder}/build/bin/deskflow",
      "problemMatcher": [],
      "dependsOn": ["build"],
      "windows": {
        "dependsOn": ["build-kill-gui"],
        "command": "${workspaceFolder}/build/bin-copy/deskflow.exe"
      },
      "osx": {
        "command": "${workspaceFolder}/build/bin/Deskflow.app/Contents/MacOS/Deskflow"
      }
    },
    {
      "label": "daemon-stop",
      "type": "shell",
      "windows": {
        "command": "Stop-Service -Name 'Deskflow' -Force; while ((Get-Service -Name 'Deskflow').Status -ne 'Stopped') { Start-Sleep -Seconds 1 }",
      },
    },
    {
      "label": "daemon-start",
      "type": "shell",
      "windows": {
        "command": "Start-Service -Name 'Deskflow'; while ((Get-Service -Name 'Deskflow').Status -ne 'Running') { Start-Sleep -Seconds 1 }",
      },
    },
    {
      "label": "daemon-restart",
      "type": "shell",
      "windows": {
        "command": "Restart-Service -Name 'Deskflow'",
      },
    },
    {
      "label": "daemon-deploy",
      "type": "shell",
      "dependsOn": ["build-kill-core", "daemon-start"],
      "dependsOrder": "sequence"
    },
    {
      "label": "unittests (current)",
      "type": "shell",
      "command": "python",
      "args": [
        "./scripts/tests.py",
        "--unit-tests",
        "--ignore-return-code",
        "--filter-file=${file}"
      ],
      "dependsOn": ["build", "clean-gcda"]
    },
    {
      "label": "integtests (current)",
      "type": "shell",
      "command": "python",
      "args": [
        "./scripts/tests.py",
        "--integ-tests",
        "--ignore-return-code",
        "--filter-file=${file}"
      ],
      "dependsOn": ["build", "clean-gcda"]
    },
    {
      "label": "unittests",
      "type": "shell",
      "command": "python",
      "args": ["./scripts/tests.py", "--unit-tests", "--ignore-return-code"],
      "dependsOn": ["build", "clean-gcda"]
    },
    {
      "label": "integtests",
      "type": "shell",
      "command": "python",
      "args": ["./scripts/tests.py", "--integ-tests", "--ignore-return-code"],
      "dependsOn": ["build", "clean-gcda"]
    },
    {
      "label": "unittests (current, valgrind)",
      "type": "shell",
      "command": "python",
      "args": [
        "./scripts/tests.py",
        "--unit-tests",
        "--ignore-return-code",
        "--filter-file=${file}",
        "--valgrind"
      ],
      "dependsOn": ["build", "clean-gcda"]
    },
    {
      "label": "integtests (current, valgrind)",
      "type": "shell",
      "command": "python",
      "args": [
        "./scripts/tests.py",
        "--integ-tests",
        "--ignore-return-code",
        "--filter-file=${file}",
        "--valgrind"
      ],
      "dependsOn": ["build", "clean-gcda"]
    }
  ]
}
